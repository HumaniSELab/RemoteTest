<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 设置为IUserDao接口方法提供sql语句配置 -->
<mapper namespace="edu.monash.dao.TestCaseDAO">

	<resultMap id="TestCaseMap" type="TestCase">
		<id column="id" property="id"/>
		<!-- column是数据库表的列名 , property是对应实体类的属性名 -->
		<result column="unique_id" property="uniqueId"/>
		<result column="name" property="name"/>
		<result column="deleted" property="deleted"/>
		<result column="create_time" property="createTime"/>
	</resultMap>

    <select id="selectByUniqueId" resultType="TestCase" parameterType="int">
        SELECT * FROM test_case WHERE unique_id = #{uniqueId}
    </select>

    <select id="selectList" resultMap="TestCaseMap">
        select * from test_case where deleted = 0
        order by id asc limit 0,${size}
    </select>

    <select id="selectFromStartToEnd" resultMap="TestCaseMap">
        select * from test_case
        where
        deleted = 0
        AND id <![CDATA[ >= ]]> #{startId}
        AND id <![CDATA[ <= ]]> #{endId}
        order by id asc
    </select>

    <select id="selectAvaliableTestCasesByDeviceId" resultMap="TestCaseMap">
        select
        A.id as id,
        A.unique_id as unique_id,
        A.name as name,
        A.deleted as deleted,
        A.create_time as createTime
        from test_case A
        left outer join test_runner B on B.test_case_id = A.unique_id
        where
        deleted = 0
        and
        (
            (B.id is NULL)
            or
            (B.device_id NOT IN
                <foreach collection="list" item="deviceId" index="index" open="(" close=")" separator=",">
                    #{deviceId}
                </foreach>
            )
        )
        limit 5
    </select>
</mapper>